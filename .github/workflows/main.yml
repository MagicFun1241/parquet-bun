name: Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions:
      contents: write
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-22.04-arm64
    runs-on: ${{ matrix.runner }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Download Go modules
      run: cd native && go mod download

    - name: Build Linux ${{ matrix.arch }}
      run: |
        cd native
        GOOS=linux GOARCH=${{ matrix.arch }} go build -ldflags "-s" -o parquet-${{ matrix.arch }}.so -buildmode=c-shared . 
        echo "${{ matrix.arch }} built"

    - name: Build Darwin ${{ matrix.arch }}
      run: | 
        cd native
        GOOS=darwin GOARCH=${{ matrix.arch }} go build -ldflags "-s" -o parquet-${{ matrix.arch }}.dylib -buildmode=c-shared .

    - name: Get package version
      id: get_version
      run: |
        cd ../
        VERSION=$(jq -r .version package.json)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "native/*.so,native/*.dylib,native/*.dll"
        tag: v${{ env.VERSION }}